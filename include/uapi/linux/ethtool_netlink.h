/* SPDX-License-Identifier: GPL-2.0 WITH Linux-syscall-note */
/*
 * include/uapi/linux/ethtool_netlink.h - netlink interface for ethtool
 *
 * See Documentation/networking/ethtool-netlink.txt in kernel source tree for
 * doucumentation of the interface.
 */

#ifndef _UAPI_LINUX_ETHTOOL_NETLINK_H_
#define _UAPI_LINUX_ETHTOOL_NETLINK_H_

#include <linux/ethtool.h>

enum {
	ETHNL_CMD_NOOP,
	ETHNL_CMD_EVENT,		/* only for notifications */
	ETHNL_CMD_GET_STRSET,
	ETHNL_CMD_SET_STRSET,		/* only for reply */
	ETHNL_CMD_GET_INFO,
	ETHNL_CMD_SET_INFO,		/* only for reply */
	ETHNL_CMD_GET_SETTINGS,
	ETHNL_CMD_SET_SETTINGS,

	__ETHNL_CMD_CNT,
	ETHNL_CMD_MAX = (__ETHNL_CMD_CNT - 1)
};

/* device specification */

enum {
	ETHA_DEV_UNSPEC,
	ETHA_DEV_INDEX,				/* u32 */
	ETHA_DEV_NAME,				/* string */

	__ETHA_DEV_CNT,
	ETHA_DEV_MAX = (__ETHA_DEV_CNT - 1)
};

/* bit sets */

enum {
	ETHA_BIT_UNSPEC,
	ETHA_BIT_INDEX,				/* u32 */
	ETHA_BIT_NAME,				/* string */
	ETHA_BIT_VALUE,				/* flag */

	__ETHA_BIT_CNT,
	ETHA_BIT_MAX = (__ETHA_BIT_CNT - 1)
};

enum {
	ETHA_BITS_UNSPEC,
	ETHA_BITS_BIT,

	__ETHA_BITS_CNT,
	ETHA_BITS_MAX = (__ETHA_BITS_CNT - 1)
};

enum {
	ETHA_BITSET_UNSPEC,
	ETHA_BITSET_LIST,			/* flag */
	ETHA_BITSET_SIZE,			/* u32 */
	ETHA_BITSET_BITS,			/* nest - ETHA_BITS_* */
	ETHA_BITSET_VALUE,			/* binary */
	ETHA_BITSET_MASK,			/* binary */

	__ETHA_BITSET_CNT,
	ETHA_BITSET_MAX = (__ETHA_BITSET_CNT - 1)
};

/* events */

enum {
	ETHA_NEWDEV_UNSPEC,
	ETHA_NEWDEV_DEV,			/* nest - ETHA_DEV_* */

	__ETHA_NEWDEV_CNT,
	ETHA_NEWDEV_MAX = (__ETHA_NEWDEV_CNT - 1)
};

enum {
	ETHA_DELDEV_UNSPEC,
	ETHA_DELDEV_DEV,			/* nest - ETHA_DEV_* */

	__ETHA_DELDEV_CNT,
	ETHA_DELDEV_MAX = (__ETHA_DELDEV_CNT - 1)
};

enum {
	ETHA_RENAMEDEV_UNSPEC,
	ETHA_RENAMEDEV_DEV,			/* nest - ETHA_DEV_* */

	__ETHA_RENAMEDEV_CNT,
	ETHA_RENAMEDEV_MAX = (__ETHA_RENAMEDEV_CNT - 1)
};

enum {
	ETHA_EVENT_UNSPEC,
	ETHA_EVENT_NEWDEV,			/* nest - ETHA_NEWDEV_* */
	ETHA_EVENT_DELDEV,			/* nest - ETHA_DELDEV_* */
	ETHA_EVENT_RENAMEDEV,			/* nest - ETHA_RENAMEDEV_* */

	__ETHA_EVENT_CNT,
	ETHA_EVENT_MAX = (__ETHA_EVENT_CNT - 1)
};

/* string sets */

enum {
	ETHA_STRING_UNSPEC,
	ETHA_STRING_INDEX,			/* u32 */
	ETHA_STRING_VALUE,			/* string */

	__ETHA_STRING_CNT,
	ETHA_STRING_MAX = (__ETHA_STRING_CNT - 1)
};

enum {
	ETHA_STRINGS_UNSPEC,
	ETHA_STRINGS_STRING,			/* nest - ETHA_STRINGS_* */

	__ETHA_STRINGS_CNT,
	ETHA_STRINGS_MAX = (__ETHA_STRINGS_CNT - 1)
};

enum {
	ETHA_STRINGSET_UNSPEC,
	ETHA_STRINGSET_ID,			/* u32 */
	ETHA_STRINGSET_COUNT,			/* u32 */
	ETHA_STRINGSET_STRINGS,			/* nest - ETHA_STRINGS_* */

	__ETHA_STRINGSET_CNT,
	ETHA_STRINGSET_MAX = (__ETHA_STRINGSET_CNT - 1)
};

/* GET_STRINGSET / SET_STRINGSET */

enum {
	ETHA_STRSET_UNSPEC,
	ETHA_STRSET_DEV,			/* nest - ETHA_DEV_* */
	ETHA_STRSET_COUNTS,			/* flag */
	ETHA_STRSET_STRINGSET,			/* nest - ETHA_STRSET_* */

	__ETHA_STRSET_CNT,
	ETHA_STRSET_MAX = (__ETHA_STRSET_CNT - 1)
};

/* GET_INFO / SET_INFO */

enum {
	ETHA_INFO_UNSPEC,
	ETHA_INFO_DEV,				/* nest - ETHA_DEV_* */
	ETHA_INFO_INFOMASK,			/* u32 */
	ETHA_INFO_COMPACT,			/* flag */
	ETHA_INFO_DRVINFO,			/* nest - ETHA_DRVINFO_* */
	ETHA_INFO_TSINFO,			/* nest - ETHA_TSINFO_* */

	__ETHA_INFO_CNT,
	ETHA_INFO_MAX = (__ETHA_INFO_CNT - 1)
};

#define ETH_INFO_IM_DRVINFO			(1U << 0)
#define ETH_INFO_IM_TSINFO			(1U << 1)

#define ETH_INFO_IM_ALL (ETH_INFO_IM_DRVINFO | \
			 ETH_INFO_IM_TSINFO)

enum {
	ETHA_DRVINFO_UNSPEC,
	ETHA_DRVINFO_DRIVER,			/* string */
	ETHA_DRVINFO_FWVERSION,			/* string */
	ETHA_DRVINFO_BUSINFO,			/* string */
	ETHA_DRVINFO_EROM_VER,			/* string */

	__ETHA_DRVINFO_CNT,
	ETHA_DRVINFO_MAX = (__ETHA_DRVINFO_CNT - 1)
};

enum {
	ETHA_TSINFO_UNSPEC,
	ETHA_TSINFO_TIMESTAMPING,		/* bitset */
	ETHA_TSINFO_PHC_INDEX,			/* u32 */
	ETHA_TSINFO_TX_TYPES,			/* bitset */
	ETHA_TSINFO_RX_FILTERS,			/* bitset */

	__ETHA_TSINFO_CNT,
	ETHA_TSINFO_MAX = (__ETHA_TSINFO_CNT - 1)
};

/* GET_SETTINGS / SET_SETTINGS */

enum {
	ETHA_SETTINGS_UNSPEC,
	ETHA_SETTINGS_DEV,			/* nest - ETHA_DEV_* */
	ETHA_SETTINGS_INFOMASK,			/* u32 */
	ETHA_SETTINGS_COMPACT,			/* flag */
	ETHA_SETTINGS_LINK_INFO,		/* nest - ETHA_LINKINFO_* */
	ETHA_SETTINGS_LINK_MODES,		/* nest - ETHA_LINKMODES_* */
	ETHA_SETTINGS_LINK_STATE,		/* nest - ETHA_LINKSTATE_* */

	__ETHA_SETTINGS_CNT,
	ETHA_SETTINGS_MAX = (__ETHA_SETTINGS_CNT - 1)
};

#define ETH_SETTINGS_IM_LINKINFO		(1U << 0)
#define ETH_SETTINGS_IM_LINKMODES		(1U << 1)
#define ETH_SETTINGS_IM_LINKSTATE		(1U << 2)

#define ETH_SETTINGS_IM_ALL (ETH_SETTINGS_IM_LINKINFO | \
			     ETH_SETTINGS_IM_LINKMODES | \
			     ETH_SETTINGS_IM_LINKSTATE)

enum {
	ETHA_LINKINFO_UNSPEC,
	ETHA_LINKINFO_PORT,			/* u8 */
	ETHA_LINKINFO_PHYADDR,			/* u8 */
	ETHA_LINKINFO_TP_MDIX,			/* u8 */
	ETHA_LINKINFO_TP_MDIX_CTRL,		/* u8 */
	ETHA_LINKINFO_TRANSCEIVER,		/* u8 */

	__ETHA_LINKINFO_CNT,
	ETHA_LINKINFO_MAX = (__ETHA_LINKINFO_CNT - 1)
};

enum {
	ETHA_LINKMODES_UNSPEC,
	ETHA_LINKMODES_AUTONEG,			/* u8 */
	ETHA_LINKMODES_OURS,			/* bitset */
	ETHA_LINKMODES_PEER,			/* bitset */
	ETHA_LINKMODES_SPEED,			/* u32 */
	ETHA_LINKMODES_DUPLEX,			/* u8 */

	__ETHA_LINKMODES_CNT,
	ETHA_LINKMODES_MAX = (__ETHA_LINKMODES_CNT - 1)
};

enum {
	ETHA_LINKSTATE_UNSPEC,
	ETHA_LINKSTATE_LINK,			/* u8 */

	__ETHA_LINKSTATE_CNT,
	ETHA_LINKSTATE_MAX = (__ETHA_LINKSTATE_CNT - 1)
};

/* generic netlink info */
#define ETHTOOL_GENL_NAME "ethtool"
#define ETHTOOL_GENL_VERSION 1

#define ETHTOOL_MCGRP_MONITOR_NAME "monitor"

#endif /* _UAPI_LINUX_ETHTOOL_NETLINK_H_ */
